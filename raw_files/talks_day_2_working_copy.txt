Okay.  We are in the very last session of the day.  Our lightening talks so if you signed up yesterday and weren't on the list, make your way to the front.  If you signed up today, form a queue behind them.
Briefly, Djangocon Europe 2016 will be held in Europe, but we don't know (LAUGHTER) (APPLAUSE).
Other than that, we don't yet know where! so we are inviting proposals and suggestions.  If you think that you might be able to put together a team in a suitable venue, in a suitable town to host this conference next year, come and talk to us.  We will announce this very soon.  We have already got some expressions of interest but, we would like to know more.  What's more, if it is, if you feel it is something you would like to do but perhaps aren't ready to do it in a year's time, now is also the time to come forward.  Because we would like those people who are putting forward serious proposals for a Djangocon Europe in 2017 to be involved with the organising committee of Djangocon committee 2016, so there can be an exchange of knowledge and information and so on.  If you would like to be involved in organising it.  The time to speak is now, even if you are not going the do it next year.
Peter Finch is in the house, ready to go on a Cardiff walk if you haven't been.  Put your hand up if you went yesterday?  Do you recommend it?  Yes.  Even though it was absolutely horrible with rain, everyone who went on it thoroughly recommended it.  If you are booked on, you will need to meet Peter on the steps of the museum at 6:30 sharply.  We have got some of Peterâ€™s books for sale on the registration desk, if you have bought one, I am sure you can get him to sign it if you ask him nicely.
Vegetarian studio, be there by, if you have got a ticket for the clink, please be there by 7:30.  Let's go on to lightening talks.  (APPLAUSE).
We have Daniel.  Did you do a lightening talk yesterday?  Yes, you did.  So who is next?
Django and robotic telescopes, Edward thank you.
Plug yourself in and off you go.  Got the timer?
So, in case you weren't aware, there is only rule one of lightening talk club, your talks last no longer than five minutes when we get towards the end I might give you a signal and you can start clapping like so, just to let people know and when I give you another signal.  Go into a round of applause when their time is up.
NEW SPEAKER:  Well normally when I stand in front of a group of strangers, either astronomers or school kids, I am daunted by standing in front of an impressive group of brains, oh what has happened there?  I keynote quit.  I am not impressed with that, slightly more daunted.  My computer is doing weird stuff.  Hang on a sec.  What I was going the talk to you about, something fascinating about astronomy.  Everybody loves doing this sort of thing on the fly, I will try and get what was my presentation back.
I would sing to you, I think that would be more terrifying than what I am about to say.
These Macs are rubbish!
(APPLAUSE) (LAUGHTER).
Okay now got a minute less than when I started so, this is a beautiful picture of a galaxy, who likes space?  Oh wow, I thought IE seven going to have to walk off the stage, that is a galaxy, a hundred billion stars, the greedy star on the right is eating the one on the left.  This is something in our own galaxy, this is stars being born.  This is an asteroid that I observed.  This is zooming through space, this is a galaxy with an exploding star in it that was brighter than the whole galaxy, so these hopefully have wet your appetite.  If you were one of the few people that didn't like astronomy and space before, hopefully that has made you like it now.
I work for an observatory, we have a robotic telescope that spans the globe, unlike the British Empire we are not evil (LAUGHTER) and, the sun never rises on our network, see what I did there?  We have 12 currently operating telescopes, we have a big one like this, the size of a double decker bus or if you are not from Britain, the size of two buses on top of each other.
Telescope, 1 meter, the size of a family car.  We have telescopes that are 40 centimetre class ones, about the size of R two D two maybe you are too clever for that one.
We cluster them together at the sitings, we have more than a thousand active users about 250 of those professional astronomers and about 750 school kids.  Now, how do we accept all the requests and package them together, we don't let people look at individual telescopes or let alone to fly to them.  They go to a website and they make requests.  There is a cyber-robot, it is a bit like a giant Tetris programme in multi-dimensions, there is the most optimised observing strategy, we use Django from almost everything, from the submission interface, to the request handling, the observation request handling and storage, a jerobi solver to package them tonight.  The schedule that produces is stored in a database and we can inspect it with Django and the telescope is in java, boo.
Once your observation has been done, the image data pipeline is done in weird stuff.  The archiving is done with Python and then we can inspect that with an open access archive through Django and an observation request interface which is also Django, so the reason for my talk is, we need you guys.  I am a little bit daunted because I sort of had a crazy idea the other day, you could do more than just support us through amazing and awesome things with Django's and Django's core at the third party apps.  Maybe try it out for yourself, normally we only let professionals and school kids use our network, but you could also try it out or, if you want to try it out and take it a bit further also work for us.
After Russell's talk said he is a doctor, there is me in the Tardis saying I am the "doctor."
DANIELE PROCIDA:  ... following from, Craig following by Carlos please.
NEW SPEAKER:  Craig:  How do I get this to?
DANIELE PROCIDA:  After Carlos we have, Thomas.  Then Matthew.
CRAIG:  Does this work?  Hello?
[changing resolution].
I can't get the slides working, I spent an hour, if you want to see them, find me later on.
My name is Craig stone, you can find me on twitter.  Since December I have been trying to mash Django with angular JS together to try and create a real-time web thing.  So, you can get, so I am guessing how many people here know about angular Jess, everyone knows Django?  An excellent back end from what I found and most of this mashing together the two frameworks is because my team leader said we should be doing this, I have been doing that.
I have been using Django fresh ... an app called Django jangular, I had to rename them annoyingly.
So if you can use Django rest framework to serialise your objects, set that at the front end as a Json, then been using Django angular to allow remote, you can decorate a method on your view with allow, remote underscore, invocation, what that will let you do, that will let you call your Python from the angular JS so if you have some Python code which you don't want to rewrite in angular or java script, or have a long going process which you can fire off, you can access it that way.  Simple if you can, if I can show you the docks later on, talks you through it.
So that is what I use Django angular for.
The other package I have been using jangular, that lets me access the settings from java script, so I can point at the static urls, when I ... I don't have to rewrite stuff.
There is some other cool things that I have not developed yet with the packages but there is something called I think swamp dragon does slightly better but not looked at that, three way binding with Reddis.  Input something on the page and type out for you as well.  But also, there is way of using Django angular, to pipe it to Reddis and to pipe it to your database directly.
Also some edits to manage.py which one of the packages does, rather than have star app, star angular app, that gives you a ..., based on angular seed.  I also found using Django angular and jangular as a good way of learning.
There are some issues, angular Jess uses curly braces, use the verbatim type you saw earlier, I let Django have its time with my index view, and passing it to jangular JS to fill everything else in.  Both do urls routing, seems a waste to have two doing differently and you can't use both.
As nice as it is, I had to learn a whole new language, so, so I suppose that is a plus and a minus.  Am I in time?  Do I have time for questions?
Oh.  I can see a time limit.  One minute of questions then.
No?  Okay.  (APPLAUSE).
Okay, Carlos, API by example?
CARLOS:  ...
All right.  So, this is API by example.  It was, it used to be!
It is no longer.  Here it is again.  So API by example this is an approach we took to testing across different services.  So, this is what we had at when we started we had classic Django application it was a monolithic thing, what we wanted to get to, to more split up into smaller services in the back end we wanted to use Django and a API server, the ... this is the kind of simplified view of part of the system and so the, we had two teams a front end team and a back end team and we basically wanted both teams to be able to work independently, we wanted the UI team not to be blocked by the back end team.  We wanted to reduce the dependencies between both teams and wanted both teams to be able to test their part separately and we wanted to avoid the fact that the, in the past, the back end team was dictating and the front end had to adapt to it after.
So we developed a way to specify the API we wanted to make it a bit formalised.  We defined API by example.  Specified with a sample question and responses, structured into the files, ABE files.  This is what the files look like, you have the description bit at the beginning, more, more humans, so it is meant for a machine human consumption, there is a part that describes exchanges of requests and responses, you can have as many examples of this as you want.  Structured repository, we had .. and mocks and back end application.
So the, the important thing to establish, began around the discussion around API so this discussion was formalised as a pull request for the repository, this pull request had to be signed up at least one person in back end and front end, we wanted to know it was usable by the people.
In the end, the PR discussion became a documented discussion over the API process and ABE file became documented not just a documented API but with some tooling around we could use it for testing.  Whenever a this was, PR was merged it could be labelled as a API ... (INAUDIBLE) easy to install it as a Python dependency... after the new API release, took two PR's to produce the,  -- this on the front end and back end team could work on implementing the stuff.
We built tooling, the whole idea around this was not just (INAUDIBLE) of the API but to make it easy to ensure that when we are testing separately, then we were testing the same thing, so we built something around this.  The tooling for angular testing was at the AV protector tool, generates a back end with these responses and requesting responses and also built a small ... worked in Python units or integration tests.
If you think this idea to apply to you and it is something you could do with, it is still much a work in progress, we would be happy to hear of others problems, to come up with something that we would love to be like widespread around the, the community and we would love for the tooling system to grow and to be much more useful for the documentation to be better, so you can come, find me, I will try and make a shirt that is more identifiable, so you can easily remember me.  Contact me over channels as well.  We have an organisation and we have example and we have several there with other tools we have.  Thank you.  (APPLAUSE)
